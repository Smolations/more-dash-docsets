 The default auth system is kenstone
s/kenstone/keystone/
I am using the ec2 compat API which I believe requires the explicit generation of ec2 compat credentials
running the command:
keystone ec2-credentials-create
should generate the credentials that you need
it also requires the usual ec2-ish things
like security groups, and a public keypair


help text:

[root@learn ~]# puppet help node_openstack
USAGE: puppet node_openstack <action> <--endpoint ENDPOINT>

This subcommand provides a command line interface to manage Openstack
machine instances. The goal of these actions is to easily create new
machine and tear them down when they're no longer
required.

OPTIONS:
 --mode MODE                    - The run mode to use (user, agent, or master).
 --render-as FORMAT             - The rendering format to use.
 --verbose                      - Whether to log verbosely.
 --debug                        - Whether to log debug information.
 --endpoint ENDPOINT            - Nova API server that services vm management
                                  requests

ACTIONS:
 create           Create a new machine instance.
 list             List machine instances.
 list_images      List available images.
 list_keynames    List available key names.
 terminate        Terminate machine instance.

See 'puppet man node_openstack' or 'man puppet-node_openstack' for full help.
                                                                     
                                                                     
                                                                     
                                             
puppet-node_openstack(8) -- View and manage openstack nodes.
============================================================

SYNOPSIS
--------
puppet node_openstack <action> <--endpoint ENDPOINT> 

DESCRIPTION
-----------
This subcommand provides a command line interface to manage Openstack
machine instances. The goal of these actions is to easily create new
machine and tear them down when they're no longer
required.

OPTIONS
-------
Note that any configuration parameter that's valid in the configuration
file is also a valid long argument, although it may or may not be
relevant to the present action. For example, `server` is a valid
configuration parameter, so you can specify `--server <servername>` as
an argument.

See the configuration file documentation at
<http://docs.puppetlabs.com/references/stable/configuration.html> for the
full list of acceptable parameters. A commented list of all
configuration options can also be generated by running puppet with
`--genconfig`.

* --mode MODE:
  The run mode to use for the current action. Valid modes are `user`, `agent`,
  and `master`.
* --render-as FORMAT:
  The format in which to render output. The most common formats are `json`,
  `s` (string), `yaml`, and `console`, but other options such as `dot` are
  sometimes available.
* --verbose:
  Whether to log verbosely.
* --debug:
  Whether to log debug information.
* --endpoint ENDPOINT:
  Nova API server that services vm management requests.
  By default, this should be : http://your.api.server:8773/services/Cloud


ACTIONS
-------
* `create` - Create a new machine instance.:
  `SYNOPSIS`

  puppet node_openstack create <--endpoint ENDPOINT>
[--credentials=]
[--platform=]
[--availability-zone=]
<--image= | -i=>
[--group= | -g= | --security-group=]
<--type=>
<--keyname=>


  `DESCRIPTION`

  Launches a new OpenStack machine instance and returns the
  machine's identifier.
  
  A newly created system may not be immediately ready after launch while
  it boots.
  
  If creation of the instance fails, Puppet will automatically clean up
  after itself and tear down the instance.


  `OPTIONS`

  <--availability-zone=> -
  Specifies the availability zone into which the VM will be created

  <--credentials=> -
  For accessing more than a single account, auxiliary credentials other
  than 'default' may be supplied in the credentials location (usually
  ~/.fog).

  <--group=> | <-g=> | <--security-group=> -
  The security group(s) that the machine will be associated with. A
  security group determines the rules for both inbound and outbound
  connections.
  
  Multiple groups can be specified as a colon-separated list.

  <--image=> | <-i=> -
  The pre-configured operating system image to use when creating this
  machine instance. Currently, only AMI images are supported. Example
  of a Redhat 5.6 32bit image: ami-b241bfdb

  <--keyname=> -
  The identifier of the SSH public key to inject into the instance's
  authorized_keys file when the instance is created.
  
  This keyname should identify the public key that corresponds with the
  private key identified by the --keyfile option of the `node` subcommand's
  `install` action.
  
  You can use the `list_keynames` action to get a list of valid key pairs for the
  specified endpoint.

  <--platform=> -
  The Cloud platform used to create new machine instances.
  Currently, AWS (Amazon Web Services) is the only supported platform.

  <--type=> -
  Type of instance to be launched. The type specifies characteristics that
  a machine will have, such as memory, processing power, storage,
  and IO performance.


* `list` - List machine instances.:
  `SYNOPSIS`

  puppet node_openstack list <--endpoint ENDPOINT>
[--credentials=]
[--platform=]


  `DESCRIPTION`

  Obtains a list of instances from the specified endpoint and
  displays them on the console. Only the instances being managed
  by that endpoint are listed.


  `OPTIONS`

  <--credentials=> -
  For accessing more than a single account, auxiliary credentials other
  than 'default' may be supplied in the credentials location (usually
  ~/.fog).

  <--platform=> -
  The Cloud platform used to create new machine instances.
  Currently, AWS (Amazon Web Services) is the only supported platform.


* `list_images` - List available images.:
  `SYNOPSIS`

  puppet node_openstack list_images <--endpoint ENDPOINT>
[--credentials=]
[--platform=]


  `DESCRIPTION`

  Obtains a list of images from the ec2 api endpoint
  and displays them on the console output. Only the images being managed
  by the specified api endpoint are listed.


  `OPTIONS`

  <--credentials=> -
  For accessing more than a single account, auxiliary credentials other
  than 'default' may be supplied in the credentials location (usually
  ~/.fog).

  <--platform=> -
  The Cloud platform used to create new machine instances.
  Currently, AWS (Amazon Web Services) is the only supported platform.


* `list_keynames` - List available key names.:
  `SYNOPSIS`

  puppet node_openstack list_keynames <--endpoint ENDPOINT>
[--credentials=]
[--platform=]


  `DESCRIPTION`

  Lists the available key names and their fingerprints.
  These keynames are specific to the specified endpoint.
  Any key name from this list is a valid argument for the `create` action's
  `--keyname` option.


  `OPTIONS`

  <--credentials=> -
  For accessing more than a single account, auxiliary credentials other
  than 'default' may be supplied in the credentials location (usually
  ~/.fog).

  <--platform=> -
  The Cloud platform used to create new machine instances.
  Currently, AWS (Amazon Web Services) is the only supported platform.


* `terminate` - Terminate machine instance.:
  `SYNOPSIS`

  puppet node_openstack terminate <--endpoint ENDPOINT>
[--credentials=]
[--platform=]
[--force | -f]
<instance_id>

  `DESCRIPTION`

  Terminate the instance identified by <instance_id>.


  `OPTIONS`

  <--credentials=> -
  For accessing more than a single account, auxiliary credentials other
  than 'default' may be supplied in the credentials location (usually
  ~/.fog).

  <--force> | <-f> -
  Forces termination of an instance.

  <--platform=> -
  The Cloud platform used to create new machine instances.
  Currently, AWS (Amazon Web Services) is the only supported platform.



COPYRIGHT AND LICENSE
---------------------
Copyright 2011 by Puppet Labs
Apache 2 license; see COPYING